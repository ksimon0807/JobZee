import passport from 'passport';
import { Strategy as GoogleStrategy } from 'passport-google-oauth20';
import { User } from '../models/userSchema.js';

// Passport session setup
passport.serializeUser((user, done) => {
  done(null, user.id);
});

passport.deserializeUser(async (id, done) => {
  try {
    const user = await User.findById(id);
    done(null, user);
  } catch (error) {
    done(error, null);
  }
});

// Google OAuth Strategy
export const initializePassport = () => {
  passport.use(
    new GoogleStrategy(
      {
        clientID: process.env.GOOGLE_CLIENT_ID,
        clientSecret: process.env.GOOGLE_CLIENT_SECRET,
        callbackURL: `${process.env.BACKEND_URL}/auth/google/callback`,
        scope: ['profile', 'email'],
      },
      async (accessToken, refreshToken, profile, done) => {
        try {
          console.log('Processing Google profile in strategy:', profile);

          if (!profile || !profile.emails || !profile.emails[0] || !profile.emails[0].value) {
            return done(new Error('Invalid profile data from Google'));
          }

          const email = profile.emails[0].value;
          let user = await User.findOne({ email });

          if (user) {
            // Update Google ID if not set
            if (!user.googleId) {
              user.googleId = profile.id;
              await user.save();
            }
            return done(null, user);
          }

          // Create new user if doesn't exist
          user = await User.create({
            email,
            name: profile.displayName,
            googleId: profile.id,
            avatar: {
              url: profile.photos[0].value
            },
            role: "Job seeker",
            social: {
              linkedin: '',
              github: '',
              website: ''
            },
            education: [{
              school: '',
              degree: '',
              fieldOfStudy: '',
              from: null,
              to: null,
              current: false,
              description: ''
            }],
            experience: [{
              title: '',
              company: '',
              location: '',
              from: null,
              to: null,
              current: false,
              description: ''
            }],
            skills: []
          });

          return done(null, user);
        } catch (error) {
          console.error('Error in Google strategy:', error);
          return done(error, null);
        }
      }
    )
  );
};

export default passport;
